generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  displayName  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  lastSeenAt   DateTime?

  roomMembers  RoomMember[]
  messages     Message[]
  receipts     MessageReceipt[]
}

model Room {
  id          String       @id @default(uuid())
  name        String
  isPrivate   Boolean      @default(false)
  inviteCode  String?      @unique
  createdAt   DateTime     @default(now())

  members     RoomMember[]
  messages    Message[]
}

model RoomMember {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  joinedAt  DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model Message {
  id        String   @id @default(cuid())
  roomId    String
  senderId  String
  content   String
  createdAt DateTime @default(now())

  room      Room     @relation(fields: [roomId], references: [id])
  sender    User     @relation(fields: [senderId], references: [id])
  receipts  MessageReceipt[]
}

model MessageReceipt {
  id        String   @id @default(cuid())
  messageId String
  userId    String
  status    ReceiptStatus
  timestamp DateTime @default(now())

  message   Message  @relation(fields: [messageId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([messageId, userId, status])
}

enum ReceiptStatus {
  DELIVERED
  READ
}
